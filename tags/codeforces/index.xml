<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codeforces on CP notebook</title>
    <link>https://cpalg.github.io/tags/codeforces/</link>
    <description>Recent content in Codeforces on CP notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>v4ngtr</copyright>
    <lastBuildDate>Tue, 06 Oct 2020 03:36:54 +0000</lastBuildDate><atom:link href="https://cpalg.github.io/tags/codeforces/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pictures with Kittens - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-06-cf1077f2/</link>
      <pubDate>Tue, 06 Oct 2020 03:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-06-cf1077f2/</guid>
      <description>Link đề bài:  https://codeforces.com/contest/1077/problem/F2.  Hướng dẫn: Code mẫu: #include &amp;lt;iostream&amp;gt;#include &amp;lt;queue&amp;gt;#define pb push_back #define FOR(i, a, b) for(int i = int(a); i &amp;lt;= int(b); i++) #define FORD(i, a, b) for(int i = int(a); i &amp;gt;= int(b); i--) #define REP(i, r) for(int i = 0; i &amp;lt; r; i++) #define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); #define READFILE freopen(&amp;#34;input.txt&amp;#34;, &amp;#34;r&amp;#34;, stdin) #define WRITEFILE freopen(&amp;#34;output.txt&amp;#34;, &amp;#34;w&amp;#34;, stdout); #define ll long long #define ii pair&amp;lt;int, int&amp;gt; #define fi first #define se second using namespace std; const int MAX= 5005; ll n, k, x, a[MAX], f[MAX][MAX]; deque&amp;lt;int&amp;gt; pq; void Insert(int col, int row){ while (pq.</description>
    </item>
    
    <item>
      <title>Boredom - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-06-cf445a/</link>
      <pubDate>Tue, 06 Oct 2020 02:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-06-cf445a/</guid>
      <description>Link đề bài:  https://codeforces.com/contest/455/problem/A.  Hướng dẫn: Code mẫu: #include &amp;lt;bits/stdc++.h&amp;gt;#define pb push_back #define FOR(i, a, b) for(int i = int(a); i &amp;lt;= int(b); i++) #define FORD(i, a, b) for(int i = int(a); i &amp;gt;= int(b); i--) #define REP(i, r) for(int i = 0; i &amp;lt; r; i++) #define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); #define READFILE freopen(&amp;#34;input.txt&amp;#34;, &amp;#34;r&amp;#34;, stdin) #define WRITEFILE freopen(&amp;#34;output.txt&amp;#34;, &amp;#34;w&amp;#34;, stdout); #define ll long long #define ii pair&amp;lt;int, int&amp;gt; #define fi first #define se second using namespace std; const int MAX= 1e5+6; ll n, a[MAX], Mx, cnt[MAX], f[MAX], pi; int main() { #ifndef ONLINE_JUDGE  READFILE; #endif  FAST; cin &amp;gt;&amp;gt; n; for(int i=1; i&amp;lt;=n; i++) cin &amp;gt;&amp;gt; a[i]; for(int i=1; i&amp;lt;=n; i++){ cnt[a[i]]++; Mx = max(Mx, a[i]); } for(int i=1; i&amp;lt;=Mx; i++){ f[i] = max(f[i-1], f[pi] + cnt[i]*i); if (f[i-1] &amp;gt; f[pi]) pi = i-1; } cout&amp;lt;&amp;lt; f[Mx]; return 0; } Tham khảo:  https://robert1003.</description>
    </item>
    
    <item>
      <title>Cats Transport - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-05-cf185b/</link>
      <pubDate>Mon, 05 Oct 2020 02:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-05-cf185b/</guid>
      <description>Link đề bài:  https://codeforces.com/contest/311/problem/B.  Hướng dẫn: Code mẫu: #include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#define ll long long #define ii pair&amp;lt;ll, ll&amp;gt; #define fi first #define se second using namespace std; const int MAX = 1e5+6; std::vector&amp;lt;ll&amp;gt; A; std::vector&amp;lt;ll&amp;gt; B; int n, m, k, pt; ll a[MAX], c[MAX], f[MAX][123], s[MAX]; ii b[MAX]; bool Bad(int l1, int l2, int l3){ return (B[l3] - B[l1]) * (A[l1] - A[l2]) &amp;lt; (B[l2] - B[l1]) * (A[l1] - A[l3]); } void Add(ll a, ll b){ A.</description>
    </item>
    
    <item>
      <title>Bear and Bowling 4 - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-04-cf660f/</link>
      <pubDate>Sun, 04 Oct 2020 02:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-04-cf660f/</guid>
      <description>Link đề bài:  https://codeforces.com/problemset/problem/660/F.  Hướng dẫn:  Gọi:  \(dp_i\) là giá trị lớn nhất tạo được khi ta chọn dãy kết thúc tại vị trí \(i\). \(s_i\) là \(\sum\limits_{x = 1}^i {a_x * x}\). \(p_i\) là \(\sum\limits_{x = 1}^i {a_x}\).   Ta có công thức quy hoạch động: \(dp_i = s_i - j * p_i + s_j - j * p_j\) Hàm có dạng \(a*x+b\) nên dùng qhd bao lồi.</description>
    </item>
    
    <item>
      <title>Product Sum - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-04-cf631e/</link>
      <pubDate>Sun, 04 Oct 2020 02:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-04-cf631e/</guid>
      <description>Link đề bài:  https://codeforces.com/problemset/problem/631/E.  Hướng dẫn:  Ta xét 2 trường hợp:   TH1: Di chuyển một khối từ vị trí \(i\) tới vị trí \(j\) \((i &amp;lt; j)\).
 Tất cả các khối ở vị trí thứ \(k\) \((i+1 &amp;lt;= k &amp;lt;= j)\) sẽ bị giảm đi \(a_k\). Giá trị của khối \(i\) sẽ tăng từ \(i * a_i\) lên thành \(j * a_j\). Ta có công thức qhđ: \(dp_j = c - \sum\limits_{k = i+1}^j {a_k} + j * a_i - i * a_i\).</description>
    </item>
    
    <item>
      <title>The Fair Nut and Rectangles - Codeforces</title>
      <link>https://cpalg.github.io/posts/2020-10-03-cf1083e/</link>
      <pubDate>Sat, 03 Oct 2020 02:36:54 +0000</pubDate>
      
      <guid>https://cpalg.github.io/posts/2020-10-03-cf1083e/</guid>
      <description>Link đề bài:  https://codeforces.com/contest/1083/problem/E/.  Hướng dẫn:  Đầu tiên ta sắp xếp các hình chữ nhật theo chiều dài tăng dần, mà đề nói không có hình chữ nhật nào chứa hình khác \(-&amp;gt;\) Chiều rộng các hình chữ nhật sau khi sắp xếp sẽ giảm dần. Gọi f[i] là cách chọn tối ưu để chọn một số hình chữ nhật từ 1 tới i:  Ta có: f[i] = max(f[j] + h[i]*w[i] - h[i]*w[j] - a[i]) \((0 &amp;lt;j &amp;lt; i)\) (hcn thứ \(j\) là hình cuối cùng ta chọn trước khi chọn hcn thứ \(i\)).</description>
    </item>
    
  </channel>
</rss>
